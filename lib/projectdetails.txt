//GOAL TRACKER

This project helps for effective to-do planning.
It does not just create todos for you but also help ensure you follow them up.

1. Add a todos
2. Add actions to be taken to achieve this today.
3. Set alarm awen necessary and send notifications when necessary.


//ADD NEW TASK
  void showAddTaskDialog(BuildContext context) {
    final TextEditingController _controller = TextEditingController();
    showDialog(
      context: context,
      builder: (BuildContext context) {
        return AlertDialog(
          //add task textfield
          content: TextField(
            controller: _controller,
            decoration: InputDecoration(
              hintText: 'Add a Task',
            ),
          ),

          //add and cancel button
          actionsAlignment: MainAxisAlignment.center,
          actions: <Widget>[
            //add button
            TextButton(
              onPressed: () {
                final newTask =
                    Taskdatabase(title: _controller.text, isCompleted: false);
                setState(() {
                  widget.goal.tasks.add(newTask);
                  Hive.box<GoalsDatabase>('goalsBox')
                      .putAt(widget.index, widget.goal);
                });
                Navigator.of(context).pop();
              },
              child: Text(
                'Add',
                style: TextStyle(fontSize: 17, color: Colors.purple.shade800),
              ),
            ),

            //cancel button
            TextButton(
              style: ButtonStyle(
                backgroundColor:
                    // ignore: deprecated_member_use
                    MaterialStateProperty.all(Colors.purple.shade100),
              ),
              onPressed: () {
                Navigator.of(context).pop(); // Close the dialog
              },
              child: Text('Cancel',
                  style:
                      TextStyle(fontSize: 17, color: Colors.purple.shade800)),
            ),
          ],
        );
      },
    );
  }

  //DELETE A TASK
  void showDeleteDialog(BuildContext context, int index) {
    final TextEditingController _controller = TextEditingController();

    showDialog(
      context: context,
      builder: (BuildContext context) {
        return AlertDialog(
          //confirm delete action text
          title: Text(
            'Confirm Deletes Action?',
            style: TextStyle(fontSize: 17),
          ),

          //yes and no button for delete action
          actionsAlignment: MainAxisAlignment.center,
          actions: <Widget>[
            //yes button
            TextButton(
              onPressed: () {
                setState(() {
                  widget.goal.tasks.removeAt(index);
                  Hive.box<GoalsDatabase>('goalsBox')
                      .putAt(widget.index, widget.goal);
                });
                Navigator.of(context).pop();
              }, // Close the dialog
              child: Text(
                'Yes',
                style: TextStyle(fontSize: 17, color: Colors.purple.shade800),
              ),
            ),

            //no button
            TextButton(
              onPressed: () {
                Navigator.of(context).pop(); // Close the dialog
              },
              child: Text('No',
                  style:
                      TextStyle(fontSize: 17, color: Colors.purple.shade800)),
            ),
          ],
        );
      },
    );
  }

  //EDIT A TASK
  void showEditActionDialog(
      BuildContext context, int index, String currentText) {
    final TextEditingController _controller = TextEditingController();
    _controller.text = currentText;

    showDialog(
      context: context,
      builder: (BuildContext context) {
        return AlertDialog(
          title: Text('Edit Action'),
          content: TextField(
            controller: _controller,
            decoration: InputDecoration(
              hintText: 'Edit action',
            ),
          ),
          actions: <Widget>[
            // Save button
            TextButton(
              onPressed: () {
                setState(() {
                  // widget.goal.tasks.add(index);
                  Hive.box<GoalsDatabase>('goalsBox')
                      .putAt(widget.index, widget.goal);
                });
                Navigator.of(context).pop();
              },
              child: Text(
                'Save',
                style: TextStyle(fontSize: 17, color: Colors.purple.shade800),
              ),
            ),
            // Cancel button
            TextButton(
              onPressed: () {
                Navigator.of(context).pop(); // Close the dialog
              },
              child: Text(
                'Cancel',
                style: TextStyle(fontSize: 17, color: Colors.purple.shade800),
              ),
            ),
          ],
        );
      },
    );
  }